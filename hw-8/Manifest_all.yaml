---
# mysql-client.yaml
apiVersion: v1
kind: Pod
metadata:
  name: mysql-client
spec:
  containers:
  - name: mysql-container
    image: alpine
    command: ['sh','-c', "sleep 1800m"]
    imagePullPolicy: IfNotPresent
---
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config-0
data:
  my.cnf: |
    [mysqld]
    server-id=1
    log_bin=mysql-bin
    binlog_format=ROW

---
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config-1
data:
  my.cnf: |
    [mysqld]
    server-id=2
    log_bin=mysql-bin
    binlog_format=ROW

---
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config-2
data:
  my.cnf: |
    [mysqld]
    server-id=3
    log_bin=mysql-bin
    binlog_format=ROW

---
#
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  ports:
  - port: 3306
  clusterIP: None
  selector:
    app: mysql

---
#
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-0
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mysql-storage
  hostPath:
    path: "/data-kubernetes/mysql-0"  # Укажите конкретную папку на узле для пода mysql-0

---
#
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-1
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mysql-storage
  hostPath:
    path: "/data-kubernetes/mysql-1"  # Укажите конкретную папку на узле для пода mysql-1

---
#
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-2
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: mysql-storage
  hostPath:
    path: "/data-kubernetes/mysql-2"  # Укажите конкретную папку на узле для пода mysql-2


---
# mysql-Secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysql-password
type: opaque
stringData:
  MYSQL_ROOT_PASSWORD: "password"



---
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: "mysql"
  replicas: 3
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: MYSQL_ROOT_PASSWORD  # Ключ, по которому будет извлечено значение пароля
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql  # Путь, где MySQL сохраняет данные
        - name: mysql-config-volume
          mountPath: /etc/mysql/conf.d
      volumes:
        - name: mysql-config-volume
          configMap:
            name: mysql-config-$(POD_NAME)
  volumeClaimTemplates:
  - metadata:
      name: mysql-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "mysql-storage"
      resources:
        requests:
          storage: 3Gi


---
# storage-class.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mysql-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

